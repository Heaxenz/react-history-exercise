{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { Component, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n/** List of jokes. */\n\nconst JokeListt = ({\n  numJokesToGet = 5\n}) => {\n  _s();\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  /* retrieve jokes from API */\n  useEffect(() => {\n    async function getJokes() {\n      let jok = [...jokes];\n      let seenJokes = new Set();\n      while (jok.length < numJokesToGet) {\n        let res = await axios.get('https://icanhazdadjoke.com', {\n          headers: {\n            Accept: 'application/json'\n          }\n        });\n        let {\n          ...jokeobj\n        } = res.data;\n        if (!seenJokes.has(jokeobj.id)) {\n          seenJokes.add(jokeobj.id);\n          jok.push({\n            jokeobj,\n            votes: 0\n          });\n        } else {\n          console.error('DUPLICATE FOUND!!');\n        }\n      }\n      setJokes(jok);\n      setIsLoading(false);\n      console.log(seenJokes);\n    }\n    if (jokes.length === 0) getJokes();\n  }, []);\n  console.log(jokes);\n  const generateNewJokes = () => {\n    setIsLoading(true);\n    setJokes([]);\n  };\n};\n\n//   /* change vote for this id by delta (+1 or -1) */\n\n//   vote(id, delta) {\n//     this.setState(st => ({\n//       jokes: st.jokes.map(j =>\n//         j.id === id ? { ...j, votes: j.votes + delta } : j\n//       )\n//     }));\n//   }\n\n//   /* render: either loading spinner or list of sorted jokes. */\n\n//   render() {\n//     let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n//     if (this.state.isLoading) {\n//       return (\n//         <div className=\"loading\">\n//           <i className=\"fas fa-4x fa-spinner fa-spin\" />\n//         </div>\n//       )\n//     }\n\n//     return (\n//       <div className=\"JokeList\">\n//         <button\n//           className=\"JokeList-getmore\"\n//           onClick={this.generateNewJokes}\n//         >\n//           Get New Jokes\n//         </button>\n\n//         {sortedJokes.map(j => (\n//           <Joke\n//             text={j.joke}\n//             key={j.id}\n//             id={j.id}\n//             votes={j.votes}\n//             vote={this.vote}\n//           />\n//         ))}\n//       </div>\n//     );\n//   }\n// }\n_s(JokeListt, \"+iu6xHPOscTV/FNdMPqy/q1M2A4=\");\n_c = JokeListt;\nexport default JokeListt;\nvar _c;\n$RefreshReg$(_c, \"JokeListt\");","map":{"version":3,"names":["React","Component","useEffect","useState","axios","Joke","JokeListt","numJokesToGet","_s","jokes","setJokes","isLoading","setIsLoading","getJokes","jok","seenJokes","Set","length","res","get","headers","Accept","jokeobj","data","has","id","add","push","votes","console","error","log","generateNewJokes","_c","$RefreshReg$"],"sources":["/Users/heaxenz/School/section-28/react-history-exercise/src/JokeListt.js"],"sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n\n/** List of jokes. */\n\nconst JokeListt = ({ numJokesToGet = 5 }) => {\n    const [jokes, setJokes] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n\n\n    /* retrieve jokes from API */\n    useEffect(() => {\n        async function getJokes() {\n            let jok = [...jokes];\n            let seenJokes = new Set();\n            while (jok.length < numJokesToGet) {\n                let res = await axios.get('https://icanhazdadjoke.com', {\n                    headers: { Accept: 'application/json' }\n                });\n                let { ...jokeobj } = res.data\n                if (!seenJokes.has(jokeobj.id)) {\n                    seenJokes.add(jokeobj.id);\n                    jok.push({ jokeobj, votes: 0 })\n                } else {\n                    console.error('DUPLICATE FOUND!!')\n                }\n            }\n            setJokes(jok);\n            setIsLoading(false);\n            console.log(seenJokes)\n        }\n        if(jokes.length === 0) getJokes();\n    }, [])\n    console.log(jokes)\n\n\n    const generateNewJokes = () =>{\n        setIsLoading(true);\n        setJokes([]);\n\n    }\n\n\n}\n\n\n//   /* change vote for this id by delta (+1 or -1) */\n\n//   vote(id, delta) {\n//     this.setState(st => ({\n//       jokes: st.jokes.map(j =>\n//         j.id === id ? { ...j, votes: j.votes + delta } : j\n//       )\n//     }));\n//   }\n\n//   /* render: either loading spinner or list of sorted jokes. */\n\n//   render() {\n//     let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n//     if (this.state.isLoading) {\n//       return (\n//         <div className=\"loading\">\n//           <i className=\"fas fa-4x fa-spinner fa-spin\" />\n//         </div>\n//       )\n//     }\n\n//     return (\n//       <div className=\"JokeList\">\n//         <button\n//           className=\"JokeList-getmore\"\n//           onClick={this.generateNewJokes}\n//         >\n//           Get New Jokes\n//         </button>\n\n//         {sortedJokes.map(j => (\n//           <Joke\n//             text={j.joke}\n//             key={j.id}\n//             id={j.id}\n//             votes={j.votes}\n//             vote={this.vote}\n//           />\n//         ))}\n//       </div>\n//     );\n//   }\n// }\n\nexport default JokeListt;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,gBAAgB;;AAGvB;;AAEA,MAAMC,SAAS,GAAGA,CAAC;EAAEC,aAAa,GAAG;AAAE,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAGhD;EACAD,SAAS,CAAC,MAAM;IACZ,eAAeW,QAAQA,CAAA,EAAG;MACtB,IAAIC,GAAG,GAAG,CAAC,GAAGL,KAAK,CAAC;MACpB,IAAIM,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;MACzB,OAAOF,GAAG,CAACG,MAAM,GAAGV,aAAa,EAAE;QAC/B,IAAIW,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,4BAA4B,EAAE;UACpDC,OAAO,EAAE;YAAEC,MAAM,EAAE;UAAmB;QAC1C,CAAC,CAAC;QACF,IAAI;UAAE,GAAGC;QAAQ,CAAC,GAAGJ,GAAG,CAACK,IAAI;QAC7B,IAAI,CAACR,SAAS,CAACS,GAAG,CAACF,OAAO,CAACG,EAAE,CAAC,EAAE;UAC5BV,SAAS,CAACW,GAAG,CAACJ,OAAO,CAACG,EAAE,CAAC;UACzBX,GAAG,CAACa,IAAI,CAAC;YAAEL,OAAO;YAAEM,KAAK,EAAE;UAAE,CAAC,CAAC;QACnC,CAAC,MAAM;UACHC,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;QACtC;MACJ;MACApB,QAAQ,CAACI,GAAG,CAAC;MACbF,YAAY,CAAC,KAAK,CAAC;MACnBiB,OAAO,CAACE,GAAG,CAAChB,SAAS,CAAC;IAC1B;IACA,IAAGN,KAAK,CAACQ,MAAM,KAAK,CAAC,EAAEJ,QAAQ,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EACNgB,OAAO,CAACE,GAAG,CAACtB,KAAK,CAAC;EAGlB,MAAMuB,gBAAgB,GAAGA,CAAA,KAAK;IAC1BpB,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,EAAE,CAAC;EAEhB,CAAC;AAGL,CAAC;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAF,EAAA,CApFMF,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAsFf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}